version: 1
disable_existing_loggers: False # this allow to get logger at module level

root:
  handlers:
    - console
  level: DEBUG
  propagate: True

# Remove all handlers for werkzeug log entries - prevents duplicated logging
loggers:
  werkzeug:
    handlers: []
  gunicorn.error:
    level: DEBUG
    handlers:
      - console
  gunicorn.access:
    level: DEBUG
    handlers:
      - console

filters:
  isotime:
    (): logging_utilities.filters.TimeAttribute
    isotime: False
    utc_isotime: True
  flask:
    (): logging_utilities.filters.flask_attribute.FlaskRequestAttribute
    attributes:
      - path
      - method
      - headers
      - remote_addr
      - json

formatters:
  standard:
    (): logging_utilities.formatters.extra_formatter.ExtraFormatter
    format: "[%(asctime)s] %(levelname)-8s - %(name)-26s : %(message)s"
  verbose:
    (): logging_utilities.formatters.extra_formatter.ExtraFormatter
    format: "[%(asctime)s] %(levelname)-8s - %(name)-26s : %(message)s"
    extra_fmt: " : path=%(request_path)s headers=%(request_headers)s payload=%(request_json)s"

handlers:
  console:
    class: logging.StreamHandler
    formatter: standard
    stream: ext://sys.stdout
    filters:
      - isotime
      - flask
