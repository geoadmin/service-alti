version: 0.2

env:
  shell: bash
  variables:
    IMAGE_BASE_NAME: "service-alti"
    REGISTRY: "974517877189.dkr.ecr.eu-central-1.amazonaws.com"
    SHELL: "/bin/bash"
    AWS_DEFAULT_REGION: eu-central-1
    USER: "aws_code_build"
    TEST_REPORT_DIR: "./tests/report"
    TEST_REPORT_FILE: "nose2-junit.xml"
    PIPENV_NOSPIN: 1
    LOGGING_CFG: "logging-cfg-ci.yml"

phases:
  install:
    runtime-versions:
      python: 3.7
    commands:
      - aws --version
      - echo "Login to AWS ECR docker registry"
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REGISTRY}
  pre_build:
    commands:
      - echo "Exporting of the image tag for building and pushing purposes"
      - echo "CODEBUILD_WEBHOOK_HEAD_REF=${CODEBUILD_WEBHOOK_HEAD_REF} CODEBUILD_WEBHOOK_BASE_REF=${CODEBUILD_WEBHOOK_BASE_REF}"
      - export GITHUB_BRANCH="${CODEBUILD_WEBHOOK_HEAD_REF#refs/heads/}"
      - export COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export GIT_TAG="$(git describe --tags || echo 'no version info')"
      - echo "GITHUB_BRANCH=${GITHUB_BRANCH} COMMIT_HASH=${COMMIT_HASH} GIT_TAG=${GIT_TAG}"
      - echo "creating a clean environment"
      - make ci
      - echo "check code formatting"
      - make ci-check-format
      - echo "linting code"
      - make lint

  build:
    commands:
      - |-
        if [ "${GIT_TAG}" = "undefined" ] ; then
          DOCKER_IMG_TAG="${REGISTRY}/${IMAGE_BASE_NAME}:${GITHUB_BRANCH//\//_}.${COMMIT_HASH}"
        else
          DOCKER_IMG_TAG="${REGISTRY}/${IMAGE_BASE_NAME}:${GIT_TAG}"
        fi
      - export DOCKER_IMG_TAG=${DOCKER_IMG_TAG}
      - export DOCKER_IMG_TAG_LATEST="${REGISTRY}/${IMAGE_BASE_NAME}:${GITHUB_BRANCH//\//_}.latest"
      # Starting dev build for testing
      - echo "starting build on $(date)"
      - echo "Building docker image with tags ${DOCKER_IMG_TAG} and ${DOCKER_IMG_TAG_LATEST}"
      - >
        docker build
        --build-arg GIT_HASH="${COMMIT_HASH}"
        --build-arg GIT_BRANCH="${GITHUB_BRANCH}"
        --build-arg AUTHOR="CI"
        --build-arg VERSION="${GIT_TAG}"
        -t "${DOCKER_IMG_TAG}" -t "${DOCKER_IMG_TAG_LATEST}" .

  post_build:
    commands:
      - mkdir -p ${TEST_REPORT_DIR}
      - export TEST_REPORT_DIR=${TEST_REPORT_DIR}
      - export TEST_REPORT_FILE=${TEST_REPORT_FILE}
      - make test
      # Only push images built from develop and master to dockerhub
      - |
        if [ "${GITHUB_BRANCH}" = "master" ] || [ "${GITHUB_BRANCH}" = "develop" ]; then
          echo "Push production image ${DOCKER_IMG_TAG}"
          docker push ${DOCKER_IMG_TAG}
        fi
      # For develop aditionally push images with '*latest*' tags
      - |-
        if [ "${GITHUB_BRANCH}" = "develop" ]; then
          echo "Push production image ${DOCKER_IMG_TAG_LATEST}"
          docker push ${DOCKER_IMG_TAG_LATEST}
        fi
      - echo Build completed on $(date)

reports:
  nose2_reports:
    files:
      - ${TEST_REPORT_FILE}
    base-directory: ${TEST_REPORT_DIR}
    file-format: JunitXml