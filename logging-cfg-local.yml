version: 1
disable_existing_loggers: False # this allow to get logger at module level

root:
  handlers:
    - console
    - file-standard
    - file-json
  level: DEBUG
  propagate: True

# Remove all handlers for werkzeug log entries - prevents duplicated logging
loggers:
  werkzeug:
    handlers: []
  gunicorn.error:
    level: DEBUG
    handlers:
      - console
      - file-standard
      - file-json
  gunicorn.access:
    level: DEBUG
    handlers:
      - console
      - file-standard
      - file-json

filters:
  isotime:
    (): logging_utilities.filters.TimeAttribute
    isotime: False
    utc_isotime: True
  flask:
    (): logging_utilities.filters.flask_attribute.FlaskRequestAttribute
    attributes:
      - path
      - method
      - headers
      - remote_addr
      - json

formatters:
  standard:
    (): logging_utilities.formatters.extra_formatter.ExtraFormatter
    format: "[%(asctime)s] %(levelname)-8s - %(name)-26s : %(message)s"
  verbose:
    (): logging_utilities.formatters.extra_formatter.ExtraFormatter
    format: "[%(asctime)s] %(levelname)-8s - %(name)-26s : %(message)s"
    extra_fmt: " : path=%(request_path)s headers=%(request_headers)s payload=%(request_json)s"
  json:
    (): logging_utilities.formatters.json_formatter.JsonFormatter
    add_always_extra: True
    filter_attributes:
      - utc_isotime
      - flask_request_path
      - flask_request_method
      - flask_request_headers
      - flask_request_json
      - flask_request_remote_addr
    remove_empty: True
    fmt:
      time: utc_isotime
      level: levelname
      logger: name
      module: module
      function: funcName
      process: process
      thread: thread
      request:
        path: flask_request_path
        method: flask_request_method
        headers: flask_request_headers
        data: flask_request_json
        remote: flask_request_remote_addr
      exc_info: exc_info
      message: message

handlers:
  console:
    class: logging.StreamHandler
    formatter: standard
    stream: ext://sys.stdout
    filters:
      - isotime
      - flask
  file-standard:
    level: DEBUG
    class: logging.FileHandler
    formatter: verbose
    filename: ${LOGS_DIR}/server-standard-logs.txt
    mode: w
    filters:
      - isotime
      - flask
  file-json:
    level: DEBUG
    class: logging.FileHandler
    formatter: json
    filename: ${LOGS_DIR}/server-json-logs.json
    mode: w
    filters:
      - isotime
      - flask
